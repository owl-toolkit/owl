image: gitlab.lrz.de:5005/i7/owl:dbeb85ad

before_script:
  - chmod +x gradlew

stages:
  - build
  - test

variables:
  GRADLE: ./.gradle
  GRADLE_HOME: $GRADLE
  GRADLE_USER_HOME: $GRADLE
  GRAAL_HOME: "/opt/graalvm-ce-java11-21.2.0"
  MUSL_CC: "/usr/local/musl/bin/musl-gcc"

# Building

Build (Native):
  stage:
    build
  cache:
    paths:
      - $GRADLE
  script:
    - native-image --version
    - ./gradlew nativeImageDistZip -Pstatic-native-executable
    - unzip -d build/unzipped build/distributions/*.zip
    - mv build/unzipped/owl-*/bin/owl .
    - ./owl --version
    - ./owl --help
  artifacts:
    paths:
      - build/distributions
      - build/native-executable/reports
      - build/native-library/reports
    when: always
    expire_in: 1 week

Build (JRE):
  stage:
    build
  cache:
    paths:
      - $GRADLE
  script:
    - javac --version
    - ./gradlew check distZip
    - unzip -d build/unzipped build/distributions/*.zip
    - mv build/unzipped/owl-*/ distUnzip
    - distUnzip/bin/owl --version
    - distUnzip/bin/owl --help
  artifacts:
    reports:
      junit: build/test-results/test/*.xml
    paths:
      - build/distributions
      - build/reports
    when: always
    expire_in: 1 week

# Templates

.ltlcross: &ltlcross_template
  script:
    - unzip -d build/unzipped build/distributions/*.zip
    - mv build/unzipped/owl-*/bin/owl .
    - ./owl --version # Check that the executable is there.
    - python3 scripts/util.py test $TEST_NAME
  artifacts:
    paths:
    - build/results/
    when: always
    expire_in: 1 week
  needs:
  - Build (Native)

# Tests

Size Regression Test:
  stage: test
  cache:
    paths:
    - $GRADLE
  script:
    - ./gradlew sizeRegressionTest
  needs:
  - Build (JRE)
  artifacts:
    reports:
      junit: build/test-results/test/*.xml
    paths:
    - build/tmp/
    - build/reports/
    when: on_failure
    expire_in: 1 hour

Performance Test:
  stage: test
  cache:
    paths:
    - $GRADLE
  script:
    - ./gradlew performanceTest
  when: manual
  needs:
    - Build (JRE)

## LTL Synthesis
Symbolic LTL Synthesis:
  stage: test
  when: manual
  script:
    - unzip -d build/unzipped build/distributions/*.zip
    - mv build/unzipped/owl-*/bin/owl-native build
    - ./scripts/symbolic-synthesis.sh > result.csv
  artifacts:
    paths:
      - result.csv
    when: always
    expire_in: 1 week
  variables:
    GIT_SUBMODULE_STRATEGY: "recursive"
  needs:
    - Build (Native)

## LTL to Automaton

## LTL to LTL

Delta-2 Normalform:
  stage: test
  variables:
    TEST_NAME: "ltl-to-delta2"
  <<: *ltlcross_template

## LTL to Automaton

ltl2aut Flags:
  stage: test
  variables:
    TEST_NAME: "ltl2aut-all-flags"
  <<: *ltlcross_template

ltl2aut Random:
  stage: test
  when: manual
  variables:
    TEST_NAME: "ltl2nba-random;ltl2ldba-random;ltl2dpa-random;ltl2dra-random;ltl2dela-random"
  <<: *ltlcross_template

ltl2nba:
  stage: test
  variables:
    TEST_NAME: "ltl2nba"
  <<: *ltlcross_template

ltl2ldba:
  stage: test
  variables:
    TEST_NAME: "ltl2ldba"
  <<: *ltlcross_template

ltl2dpa:
  stage: test
  variables:
    TEST_NAME: "ltl2dpa;ltl2dpa-symbolic"
  <<: *ltlcross_template

ltl2dra:
  stage: test
  variables:
    TEST_NAME: "ltl2dra"
  <<: *ltlcross_template

ltl2dela:
  stage: test
  variables:
    TEST_NAME: "ltl2dela"
  <<: *ltlcross_template

## Automaton to Automaton

aut2parity:
  stage: test
  variables:
    TEST_NAME: "aut2parity"
  <<: *ltlcross_template

ngba2ldba:
  stage: test
  variables:
    TEST_NAME: "ngba2ldba"
  <<: *ltlcross_template

nba2dpa (Default):
  stage: test
  variables:
    TEST_NAME: "nba2dpa-default"
  <<: *ltlcross_template

nba2dpa (Complete):
  stage: test
  when: manual
  variables:
    TEST_NAME: "nba2dpa-complete"
  <<: *ltlcross_template

## Conversions

aut-utilities:
  stage: test
  variables:
    TEST_NAME: "aut-utilities"
  <<: *ltlcross_template
