/* Generated By:JavaCC: Do not edit this line. HOAFParserCCConstants.java */
package jhoafparser.parser.generated;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface HOAFParserCCConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int WHITESPACE = 1;
  /** RegularExpression Id. */
  int BODY = 9;
  /** RegularExpression Id. */
  int END = 10;
  /** RegularExpression Id. */
  int ABORT = 11;
  /** RegularExpression Id. */
  int HOA = 12;
  /** RegularExpression Id. */
  int STATE = 13;
  /** RegularExpression Id. */
  int STATES = 14;
  /** RegularExpression Id. */
  int START = 15;
  /** RegularExpression Id. */
  int AP = 16;
  /** RegularExpression Id. */
  int ALIAS = 17;
  /** RegularExpression Id. */
  int ACCEPTANCE = 18;
  /** RegularExpression Id. */
  int ACCNAME = 19;
  /** RegularExpression Id. */
  int TOOL = 20;
  /** RegularExpression Id. */
  int NAME = 21;
  /** RegularExpression Id. */
  int PROPERTIES = 22;
  /** RegularExpression Id. */
  int NOT = 23;
  /** RegularExpression Id. */
  int AND = 24;
  /** RegularExpression Id. */
  int OR = 25;
  /** RegularExpression Id. */
  int LPARENTH = 26;
  /** RegularExpression Id. */
  int RPARENTH = 27;
  /** RegularExpression Id. */
  int LBRACKET = 28;
  /** RegularExpression Id. */
  int RBRACKET = 29;
  /** RegularExpression Id. */
  int LCURLY = 30;
  /** RegularExpression Id. */
  int RCURLY = 31;
  /** RegularExpression Id. */
  int TRUE = 32;
  /** RegularExpression Id. */
  int FALSE = 33;
  /** RegularExpression Id. */
  int REG_INT = 34;
  /** RegularExpression Id. */
  int REG_STRING = 35;
  /** RegularExpression Id. */
  int REG_IDENT = 36;
  /** RegularExpression Id. */
  int REG_HEADERNAME = 37;
  /** RegularExpression Id. */
  int REG_ANAME = 38;
  /** RegularExpression Id. */
  int LEXICAL_ERROR = 39;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_COMMENT = 1;
  /** Lexical state. */
  int IN_COMMENT_DEEP = 2;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<WHITESPACE>",
    "\"/*\"",
    "\"/*\"",
    "\"/*\"",
    "<token of kind 5>",
    "<token of kind 6>",
    "\"*/\"",
    "\"*/\"",
    "\"--BODY--\"",
    "\"--END--\"",
    "\"--ABORT--\"",
    "\"HOA:\"",
    "\"State:\"",
    "\"States:\"",
    "\"Start:\"",
    "\"AP:\"",
    "\"Alias:\"",
    "\"Acceptance:\"",
    "\"acc-name:\"",
    "\"tool:\"",
    "\"name:\"",
    "\"properties:\"",
    "\"!\"",
    "\"&\"",
    "\"|\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\"{\"",
    "\"}\"",
    "\"t\"",
    "\"f\"",
    "<REG_INT>",
    "<REG_STRING>",
    "<REG_IDENT>",
    "<REG_HEADERNAME>",
    "<REG_ANAME>",
    "<LEXICAL_ERROR>",
  };

}
